// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Config {
  plaidClientId String @id
  plaidSecret   String
}

model Institution {
  plaidId          String    @id
  name             String
  plaidAccessToken String
  accounts         Account[]
}

model Transaction {
  plaidId         String   @id
  plaidAccountId  String
  date            String
  name            String
  amount          Float
  category        String
  checkNumber     String
  categoryIconUrl String
  logoUrl         String
  paymentChannel  String
  merchantName    String
  address         String
  city            String
  state           String
  lat             Float?
  lon             Float?
  postalCode      String
  account         Account? @relation(fields: [plaidAccountId], references: [plaidId])
  hidden          Boolean  @default(false)

  // extra attrs: not set by import
  importedAt  DateTime   @default(now())
  importLog   ImportLog? @relation(fields: [importLogId], references: [id])
  importLogId Int?
}

model Account {
  plaidId            String           @id
  plaidItemId        String?
  name               String
  officialName       String?
  subtype            String
  type               String
  mask               String
  currentBalance     Float?
  availableBalance   Float?
  isoCurrencyCode    String?
  transactions       Transaction[]
  Institution        Institution?     @relation(fields: [institutionPlaidId], references: [plaidId])
  institutionPlaidId String?
  importedAt         DateTime         @default(now())
  importLog          ImportLog?       @relation(fields: [importLogId], references: [id])
  importLogId        Int?
  AccountBalance     AccountBalance[]
}

model ImportLog {
  id                Int           @id @default(autoincrement())
  syncStartedAt     DateTime      @default(now())
  syncCompletedAt   DateTime?     @updatedAt
  transactionsCount Int?
  Transaction       Transaction[]
  Account           Account[]
}

model AccountBalance {
  id              Int      @id @default(autoincrement())
  current         Float
  available       Float
  isoCurrencyCode String
  account         Account  @relation(fields: [accountPlaidId], references: [plaidId])
  accountPlaidId  String
  createdAt       DateTime @default(now())
}
